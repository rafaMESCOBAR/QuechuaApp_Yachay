version: '3.8'

services:
  db:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: yachay
      POSTGRES_USER: yachay_user
      POSTGRES_PASSWORD: yachay_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U yachay_user -d yachay"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - yachay-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - yachay-network

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    # 游댢 CONFIGURACI칍N OPTIMIZADA: Solo 2 workers para evitar timeouts
    command: >
      sh -c "
        echo 'Esperando base de datos...' &&
        python manage.py wait_for_db &&
        echo 'Ejecutando migraciones...' &&
        python manage.py migrate &&
        echo 'Cargando datos iniciales...' &&
        python manage.py init_data &&
        echo 'Recolectando archivos est치ticos...' &&
        python manage.py collectstatic --noinput --clear &&
        echo 'Iniciando servidor optimizado...' &&
        gunicorn --bind 0.0.0.0:8000 --workers 2 --timeout 120 --max-requests 1000 --max-requests-jitter 100 --worker-connections 1000 quechua_backend.wsgi:application
      "
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    environment:
      # 游댢 CORRECCI칍N: DEBUG=False para producci칩n local
      - DEBUG=False
      - DATABASE_URL=postgresql://yachay_user:yachay_password@db:5432/yachay
      - REDIS_URL=redis://redis:6379/1
      - ALLOWED_HOSTS=*,127.0.0.1,localhost,192.168.137.110
      # 游댢 VARIABLES ADICIONALES para optimizaci칩n
      - DJANGO_LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    # 游댢 L칈MITES DE MEMORIA CR칈TICOS
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - yachay-network
    # 游댢 HEALTH CHECK CORREGIDO: Usar endpoint m치s estable
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:8000/admin/login/ || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 90s  # M치s tiempo para inicializaci칩n

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    networks:
      - yachay-network
    # 游댢 L칈MITES PARA NGINX TAMBI칄N
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  yachay-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450